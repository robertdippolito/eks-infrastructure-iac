name: Deploy K8s API Infrastructure

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy k8s‑api‑infrastructure
    runs-on: ubuntu-latest
    env:
      TF_VAR_aws_region: ${{ secrets.TF_VAR_aws_region }}
      TF_VAR_environment: ${{ secrets.AWS_REGION }}
      TF_VAR_project_name: ${{ secrets.TF_VAR_project_name }}
      TF_VAR_backend_bucket: ${{ secrets.TF_VAR_backend_bucket }}
      TF_VAR_backend_bucket_key: ${{ secrets.TF_VAR_backend_bucket_key }}
      TF_VAR_dynamodb_table: ${{ secrets.TF_VAR_dynamodb_table }}
      TF_VAR_cluster_name: ${{ secrets.TF_VAR_cluster_name }}
      TF_VAR_node_group_name: ${{ secrets.TF_VAR_node_group_name }}
      TF_VAR_repo_name: ${{ secrets.TF_VAR_repo_name }}
      TF_VAR_ec2_ssh_key: ${{ secrets.TF_VAR_ec2_ssh_key }}
      TF_VAR_vpc_cidr: ${{ secrets.TF_VAR_vpc_cidr }}
      TF_VAR_availability_zones: ${{ secrets.TF_VAR_availability_zones }}
      TF_VAR_aliases: ${{ secrets.TF_VAR_aliases }}
      TF_VAR_zone_name: ${{ secrets.TF_VAR_zone_name }}
      TF_VAR_zone_comment: ${{ secrets.TF_VAR_zone_comment }}
      TF_VAR_domain_name: ${{ secrets.TF_VAR_domain_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_VAR_backend_bucket }}" \
            -backend-config="key=${{ secrets.TF_VAR_backend_bucket_key }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_VAR_dynamodb_table }}"

      - name: Apply core infra modules
        run: |
          terraform apply -auto-approve \
            -target=module.iam \
            -target=module.vpc \
            -target=module.eks_cluster \
            -target=module.eks_managed_nodes \
            -target=module.security_groups

      - name: Apply Ingress‑NGINX Helm release
        run: terraform apply -auto-approve -target=helm_release.ingress_nginx

      - name: Apply CloudFront & Route53
        run: |
          terraform apply -auto-approve \
            -target=module.cloudfront \
            -target=module.route53_api_record